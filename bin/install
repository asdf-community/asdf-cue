#!/usr/bin/env bash

set -eo pipefail

fail() {
  echo -e "\e[31mFail:\e[m $*"
  exit 1
}

install_cue() {
  local install_type=$1
  local version=$2
  local install_path=$3
  if [ "$install_type" != "version" ]; then
    fail "asdf-cue supports release installs only"
  fi

  local major_version
  local minor_version
  local patch_version
  major_version=$(echo "$version" | grep -Eo '[0-9]+' | head -1 | tail -1)
  minor_version=$(echo "$version" | grep -Eo '[0-9]+' | head -2 | tail -1)
  patch_version=$(echo "$version" | grep -Eo '[0-9]+' | head -3 | tail -1)

  local architecture
  case "$(uname -m)" in
    x86_64) architecture="x86_64" ;;
    arm | aarch64) architecture="arm64" ;;
    *) fail "Unsupported architecture" ;;
  esac

  local platform
  local download_url
  if [[ "$major_version" -ge 0 && "$minor_version" -ge 3 && "$patch_version" -ge 1 \
      || "$major_version" -ge 0 && "$minor_version" -ge 4 && "$patch_version" -ge 0 \
      || "$major_version" -ge 1 && "$minor_version" -ge 0 && "$patch_version" -ge 0 \
      || "$version" == "v0.3.0-beta.6" \
      || "$version" == "v0.3.0-beta.7" \
      || "$version" == "v0.3.0-beta.8" \
      || "$version" == "v0.3.0" ]]; then
    case "$OSTYPE" in
      darwin*) platform="darwin" ;;
      linux*) platform="linux" ;;
      *) fail "Unsupported platform" ;;
    esac
    download_url="https://github.com/cuelang/cue/releases/download/v${version}/cue_v${version}_${platform}_${architecture}.tar.gz"
  else
    case "$OSTYPE" in
      darwin*) platform="Darwin" ;;
      linux*) platform="Linux" ;;
      *) fail "Unsupported platform" ;;
    esac
    download_url="https://github.com/cuelang/cue/releases/download/v${version}/cue_${version}_${platform}_${architecture}.tar.gz"
  fi

  local source_path="${install_path}/bin/cue.tar.gz"
  local distination="${install_path}/bin"
  (
    echo "âˆ— Downloading and installing cue..."
    mkdir -p "$distination"
    curl --silent --location --create-dirs --output "$source_path" "$download_url" || fail "Could not download"
    tar zxf "$source_path" -C "$distination" >/dev/null || fail "Could not uncompress"
    rm "$source_path"
    echo "The installation was successful!"
  ) || (
    rm -rf "$install_path"
    fail "An error occurred"
  )
}

install_cue "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_INSTALL_PATH"
